// This header file was auto-generated by ClassMate++
// Created: 16 Sep 2017 12:15:26 pm
// Copyright (c) 2017, HurleyWorks

#pragma once

class IO;  // forward decl for impl

using sabi::MeshOptions;

class ActiveIO
{
	// The Active Object design pattern decouples method execution from
	// method invocation to enhance concurrency and simplify synchronized 
	// access to an object that resides in its own thread of control.

 public:
	ActiveIO ();
	~ActiveIO ();
	
	// messaging
	MsgSender getMessenger() { return incoming; }
	void done() { getMessenger().send(qms::clear_queue()); }

 private:
	 std::unique_ptr<IO> impl;
	 
	// messaging
	MsgReceiver incoming;

	// message arguments
	size_t frameNumber = 0;
	MessageService messengers;
	PropertyService properties;
    std::string meshPath;
    MeshOptions meshOptions;

	// state functions
	std::thread stateThread;
	void (ActiveIO::*state)();
	void waitingForMessages();
	void init();
	void onTick();
    void loadMesh();

	// state thread function
	void executeState();
	void start();

	bool shutdown = false;
	
}; // end class ActiveIO
