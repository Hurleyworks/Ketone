// This header file was auto-generated by ClassMate++
// Created: 28 Feb 2018 8:30:14 am
// Copyright (c) 2018, HurleyWorks

#pragma  once

using sabi::CameraHandle;

class RenderCore
{

 public:
    RenderCore() = default;
    ~RenderCore() = default;

	void init(MessageService messengers, const PropertyService & properties);
    void tick (size_t frameNumber) {}
	void initEngine (CameraHandle& camera);
    void render (CameraHandle& camera, uint32_t frameNumber);
    void onInput (InputEvent& input);
    void addRenderableNode (RenderableNode& node)
    {
        InstanceRef inst = mesh->addRenderableNode (node);
        scene->addInstance (node, inst);
        sceneIsDirty = true;
    }

 private:
	MessageService messengers;
	PropertyService properties;
    InputEvent input;
    CudaCompiler compiler;

    size_t lastSelectedCount = 0;
    std::string ptxFolder = INVALID_PATH;
    bool enableMotionBlur = false;
    bool sceneIsDirty = false;
    RenderMode pipelineType = RenderMode::Invalid;

    MoojiStateRef state = nullptr;
    MoojiSceneRef scene = nullptr;
    MoojiRendererRef renderer = nullptr;
    MoojiMeshRef mesh = nullptr;

}; // end class RenderCore

