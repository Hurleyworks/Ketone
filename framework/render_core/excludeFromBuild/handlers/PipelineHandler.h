// This header file was auto-generated by ClassMate++
// Created: 9 Aug 2020 3:08:12 pm
// Copyright (c) 2020, HurleyWorks

#pragma once

class PipelineHandler
{
 public:
    PipelineHandler() = default;
    ~PipelineHandler();

    void initialize();
    void setPipeline (const std::string& ptxFolder, RenderMode pipelineType = RenderMode::PathTracer, bool enableMotionBlur = false);

    CUcontext& cuCtx() { return cuContext; }
    optixu::Context& optCtx() { return optixContext; }
    optixu::Pipeline& pl() { return pipeline; }
    bool usingMotionBlur() const { return motionBlur; }
    const optixu::ProgramGroup& getShadingHitGroup() const { return shadingHitProgramGroup; }
    const optixu::ProgramGroup& getVisiblityHitGroup() const { return visibilityHitProgramGroup; }
    RenderMode getPipelineType() const { return pipelineType; }
    CUstream& stream() { return cuStream; }

    uint32_t getSearchRayType()
    {
        switch (pipelineType)
        {
            case RenderMode::PathTracer:
                return PathTracerShared::RayType_Search;

            default:
                jassert (false);
        }

        return 0;
    }

    uint32_t getVisibilityRayType()
    {
        switch (pipelineType)
        {
            case RenderMode::PathTracer:
                return PathTracerShared::RayType_Visibility;

            default:
                jassert (false);
        }

        return 0;
    }

    uint32_t getRayTypeCount()
    {
        switch (pipelineType)
        {
            case RenderMode::PathTracer:
                return PathTracerShared::NumRayTypes;

            default:
                jassert (false);
        }
        return 0;
    }
    const std::string& getPtxFolder() const { return ptxFolder; }

 private:
    CUcontext cuContext;
    int32_t cuDeviceCount;
    CUstream cuStream;
    bool motionBlur = false;
    optixu::Context optixContext;
    optixu::Pipeline pipeline;
    RenderMode pipelineType = RenderMode::Invalid;

    std::string ptxFolder;
    optixu::Module moduleOptiX;
    optixu::Module emptyModule;

    optixu::ProgramGroup rayGenProgram;
    optixu::ProgramGroup missProgram;
    optixu::ProgramGroup emptyMissProgram;
    optixu::ProgramGroup shadingHitProgramGroup;
    optixu::ProgramGroup visibilityHitProgramGroup;

    cudau::Buffer shaderBindingTable;
    size_t sbtSize;
    void createPathtracerPipeline (const std::string& ptxFolder);

}; // end class PipelineHandler
