// This source file was auto-generated by ClassMate++
// Created: 11 Sep 2020 3:08:51 pm
// Copyright (c) 2020, HurleyWorks

// ctor
PickHandler::PickHandler (OptiXStateRef state) :
    state (state)
{
    pickDataBuffer.initialize (state->cuContext, g_bufferType, 1);
}

// dtor
PickHandler::~PickHandler()
{
    pickDataBuffer.finalize();
}

RenderableNode PickHandler::getPick()
{
    RenderableNode picked = nullptr;

    pickDataBuffer.map();

    Shared::PickingData* pickData = pickDataBuffer.getMappedPointer();
    if (!pickData)
    {
        pickDataBuffer.unmap();
        return nullptr;
    }

 //   LOG (DBUG) << "Instance: " << pickData->intanceID;
  // LOG (DBUG) << "Primitive: " << pickData->primitiveID;

    // pick ray missed geometry
    if (pickData->intanceID == ~0)
    {
        pickDataBuffer.unmap();
        return nullptr;
    }

    // we're assuming instanceID == serialID is it really so?
    auto it = state->insts.find (pickData->intanceID);
    if (it == state->insts.end())
    {
        pickDataBuffer.unmap();
        return nullptr;
    }
    else
    {
        // FIXME we're going to need this later for painting!
        mace::vecStr3f (Vector3f (pickData->hitPoint.x, pickData->hitPoint.y, pickData->hitPoint.z), DBUG, "HIT POINT");
        picked = it->second->weakNode.lock();
    }

    pickDataBuffer.unmap();

    return picked;
}
