// This header file was auto-generated by ClassMate++
// Created: 8 Sep 2020 8:44:40 pm
// Copyright (c) 2020, HurleyWorks

#pragma once

using SceneHandlerRef = std::shared_ptr<class SceneHandler>;

class SceneHandler
{
 public:
    static SceneHandlerRef create (OptiXStateRef state) { return std::make_shared<SceneHandler> (state); }

 public:
    SceneHandler (OptiXStateRef state);
    ~SceneHandler();

    void addInstance (RenderableNode& node, InstanceRef& inst, PipelineHandlerRef& pipeline);
    void updateState (PipelineHandlerRef& pipeline, bool updateSBT = true);

 private:
    OptiXStateRef state = nullptr;
    size_t hitGroupSbtSize = 0;

    int32_t sbtIndex = -1;
    cudau::Buffer* curHitGroupSBT = nullptr;

    bool traversablesUpdated = false;
    bool hitGroupSbtLayoutUpdated = true;

    GroupRef createTopGroup();

}; // end class SceneHandler
