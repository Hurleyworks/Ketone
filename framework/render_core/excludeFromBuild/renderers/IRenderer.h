// This header file was auto-generated by ClassMate++
// Created: 9 Aug 2020 3:08:12 pm
// Copyright (c) 2020, HurleyWorks

#pragma once

using IRendererRef = std::shared_ptr<class IRenderer>;
using sabi::CameraHandle;
using sabi::RenderableNode;

class IRenderer
{
 public:
    virtual ~IRenderer()
    {
    }
    virtual void initialize (CameraHandle& camera) = 0;
    virtual float render (CameraHandle& camera, PipelineHandlerRef& pipeline) = 0;
    virtual void updateCamera (CameraHandle& camera) = 0;
    virtual void onResize (CameraHandle& camera) = 0;
    virtual RenderableNode pick (float x, float y, PipelineHandlerRef& pipeline) { return nullptr; }

 protected:
    IRenderer (OptiXStateRef state) :
        state (state)
    {
    }

    GPUTimer gpuTimer;

    int32_t renderWidth = DEFAULT_DESKTOP_WINDOW_WIDTH;
    int32_t renderHeight = DEFAULT_DESKTOP_WINDOW_HEIGHT;

    OptiXStateRef state = nullptr;
}; // end class IRenderer
